#!/bin/bash
# This should do everything required to build & install under Ubuntu and update itself.
# Other distros edit config file when prompted to change Linux= to command to get your dependencies.
# Dependencies for many distros are listed on the github FAQ.  Please let me know if incorrect
# or if you have another distro to add.
# 2020-0813-2210

domake(){
	#Here We go & music to build to
	if [ -f /usr/bin/mplayer ]  && [ -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/File_Select_64_slowed_down.mp3 ]; then
		if [ -f ~/"$REPO"/sound/samples/sfx_mario/0C.aiff ]; then
			sh -c 'mplayer -nolirc -really-quiet ~/'"$REPO"'/sound/samples/sfx_mario/0C.aiff;mplayer -nolirc -really-quiet -volume 50 '${XDG_DATA_HOME:-$HOME/.local/share}'/sm64pc/File_Select_64_slowed_down.mp3&'
		elif [ -f ~/sm64ex/sound/samples/sfx_mario/0C.aiff ]; then
			sh -c 'mplayer -nolirc -really-quiet ~/sm64ex/sound/samples/sfx_mario/0C.aiff;mplayer -nolirc -really-quiet -volume 50 '${XDG_DATA_HOME:-$HOME/.local/share}'/sm64pc/File_Select_64_slowed_down.mp3&'
		else
			sh -c 'mplayer -nolirc -really-quiet -volume 50 '${XDG_DATA_HOME:-$HOME/.local/share}'/sm64pc/File_Select_64_slowed_down.mp3&'
		fi
	fi 
	if [ "$TARGET_WEB" = 1 ]; then 
		if [ "$InstallHD" = 1 ]; then
			sed -i 's/TOTAL_MEMORY=20MB/TOTAL_MEMORY=28MB/g' ~/"$REPO"/Makefile
		fi
		loademsdk
	fi
	if [ "$ANDROID" = 1 ]; then
		export ANDROID_HOME=~/android-sdk
		checkphone
		if [ "$GOTPHONE" = 1 ]; then
			zenity --info --text='\nPhone Detected.  Be sure to grant it debugging permission.\n\nExisting copies must also be removed from device.' --title="Preparing for Android Installation...." --width=440 &disown
		else
			echo "If you want the app installed to your Android device,"
			echo "plug it in now via USB and grant it debugging permission."
			zenity --info --text='\nIf you want the app installed to your Android device,\nplug it in now via USB and grant it debugging permission.\n\nExisting copies must also be removed from device.' --title="Preparing for Android Installation...." --width=440 &disown
			echo
		fi
	fi
	if [ "$REPO" = "sm64nx" ]; then
		sed -i 's/-no-pie -lpthread -lzstd/-no-pie -lpthread -lzstd -lstdc++fs/g' ~/"$REPO"/Makefile
	fi
	if [ -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/buildlog.txt ]; then
		mv -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/buildlog.txt ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/buildlog.old
	fi
	if [ "$REPO" = "sm64-port-android-base" ]; then
		cd ~/"$REPO"/app/jni/src
	else
		cd ~/"$REPO"
	fi
	time make BETTERCAMERA=$BETTERCAMERA NODRAWINGDISTANCE=$NODRAWINGDISTANCE TEXTURE_FIX=$TEXTURE_FIX EXTERNAL_DATA=$EXTERNAL_DATA DISCORDRPC=$DISCORDRPC VERSION=$VERSION RENDER_API=$RENDER_API TARGET_WEB=$TARGET_WEB TEXTSAVES=$TEXTSAVES "$JOBS" > ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/buildlog.txt
	if [ "$REPO" = "sm64nx" ] || ( [ "$TARGET_WEB" = 1 ] && [ "$InstallHD" = 1 ] ); then
		rm Makefile
		git checkout Makefile
	fi
	if [ "$REPO" = "sm64-port-android-base/app/jni/src" ]; then
		if [ "$Branch" = "sm64ex" ] || [ "$Branch" = "sm64ex_nightly" ]; then
			make BETTERCAMERA=$BETTERCAMERA NODRAWINGDISTANCE=$NODRAWINGDISTANCE TEXTURE_FIX=$TEXTURE_FIX EXTERNAL_DATA=$EXTERNAL_DATA DISCORDRPC=$DISCORDRPC VERSION=$VERSION RENDER_API=$RENDER_API TARGET_WEB=$TARGET_WEB TEXTSAVES=$TEXTSAVES "$JOBS" > ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/buildlog.txt
		fi
		cd ~/sm64-port-android-base
		checkphone
		if [ "$GOTPHONE" = 1 ]; then
			echo
			echo Do not disconnect phone until complete...
			./gradlew installDebug
		else
			echo Phone not deteced, building apk without installation...
			killall -q zenity
			./gradlew assembleDebug
		fi
	fi
	if [ -f /usr/bin/mplayer ]  && [ -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/File_Select_64_slowed_down.mp3 ]; then
		killall -q -y2m mplayer
	fi
	}

androidsdk(){
	if [ -f /usr/bin/apt ]; then
		sudo apt install android-sdk -y
	fi
	if [ ! -d ~/android-sdk/tools/sdkmanager ]; then
		cd
		wget https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip
		unzip -o commandlinetools-linux-6609375_latest -d android-sdk
		rm commandlinetools-linux-6609375_latest.zip
	fi
	PATH=~/android-sdk/tools/bin:$PATH
	export PATH=~/android-sdk/tools/bin:$PATH
	export ANDROID_HOME=~/android-sdk
	yes | sdkmanager --sdk_root=${ANDROID_HOME} --licenses
	sdkmanager --install --sdk_root=${ANDROID_HOME} ndk-bundle
	}

checkphone(){
	adb devices | while read line
	do
		if [ ! "$line" = "" ] && [ `echo $line | awk '{print $2}'` = "device" ]; then
        		GOTPHONE=1
		fi
	done
	}

gcccheck(){
	if [ -f /usr/bin/gcc ]; then
		if [ `gcc -dumpversion` \> 7.99 ]; then
			echo gcc 8 or higher confirmed
			return
		fi
	else 
		if [ -f /usr/bin/apt ]; then		
			echo Attempting to install gcc 9.
			echo | sudo add-apt-repository ppa:ubuntu-toolchain-r/test
			sudo apt install -y g++-9
			sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 80 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
			if [ `gcc -dumpversion` \> 8.99 ]; then
				echo gcc 9 succesfully installed
				return
			else
				echo Attempting to install gcc 8.
				sudo apt install -y g++-8
				sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 80 --slave /usr/bin/g++ g++ /usr/bin/g++-8 --slave /usr/bin/gcov gcov /usr/bin/gcov-8
				if [ `gcc -dumpversion` \> 7.99 ]; then
					echo gcc 8 succesfully installed
					return
				fi
			fi			
		fi
		echo WARNING: Your C compiler is not new enough for sm64nx. 
		echo gcc --version must report 8 or higher.  
		echo Please install it then rerun smlinux, or use another repo.
		echo
		exit
	fi	
	}

vettrom(){
	if [ "$VERSION" = "us" ]; then
		HASH=`sha1sum ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 | grep 9bef1128717f958171a4afac3ed78ee2bb4e86ce`
	elif [ "$VERSION" = "jp" ]; then
		HASH=`sha1sum ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 | grep 8a20a5c83d6ceb0f0506cfc9fa20d8f438cafe51`
	elif [ "$VERSION" = "eu" ]; then
		HASH=`sha1sum ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 | grep 4ac5721683d0e0b6bbb561b58a71740845dceea9`
	fi
	if [ "$HASH" = "" ]; then
		rm ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64
	fi
	}


makeconfig(){
echo '#[sm64pc/sm64ex] These settings only apply to sm64pc/sm64ex fork.
BETTERCAMERA=1
NODRAWINGDISTANCE=1
TEXTURE_FIX=1
EXTERNAL_DATA=1
DISCORDRPC=1
#RENDER_API supports GL (2.1+) or GL_LEGACY (1.2-2.0)
RENDER_API=GL
TEXTSAVES=0
#[Script] These settings tell script what to do.
#VERSION supports us jp eu (must correspond to rom version)
VERSION=us
#REPO supports sm64pc sm64-port sm64ex sm64nx sm64-port-android-base
REPO=sm64ex
Branch=nightly
AutoUpdate=1
InstallHD=1
UpdateHD=0
TARGET_WEB=0
JOBS=-j
Linux="sudo apt install -y build-essential git python3 libaudiofile-dev libglew-dev libsdl2-dev binutils libusb-1.0-0-dev libzstd-dev python3-pip mplayer"
CONFIG=0'> ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinuxcfg.txt
	}

loadconfig(){
	REPO=sm64pc
	TARGET_WEB=0
	TEXTSAVES=0
	source ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinuxcfg.txt
	if [ "$REPO" = "sm64pc" ] && [ "$Branch" = "nightly" ]; then
		REPO=sm64ex
	fi
	if [ "$JOBS" = "-j" ]; then
		if [ "$REPO" = "sm64nx" ]; then 
			JOBS=-j`nproc`
			if [ ! -f ~/.smlinuxUpdate ]; then
				echo WARNING: Jobs set to -j`nproc` because nuz nx has problems with unlimited.
			fi
		elif [ "$TARGET_WEB" = "1" ]; then
			JOBS=-j`nproc`
			if [ ! -f ~/.smlinuxUpdate ]; then
				echo WARNING: Jobs set to -j`nproc` because nuz emsdk has problems with unlimited. 
			fi
		fi
	fi
	if [ ! `arch` = "x86_64" ] || [ ! "$VERSION" = "us" ]; then
		DISCORDRPC=0
	fi
	if [ "$TARGET_WEB" = 1 ]; then 
		TARGET=web
		EXTERNAL_DATA=0
		DISCORDRPC=0
	else
		TARGET=pc
	fi
	if [ "$REPO" = "sm64-port-android-base" ]; then
		REPO="sm64-port-android-base/app/jni/src"
		ANDROID=1
		if [ "$Branch" = "nightly" ] || [ "$Branch" = "sm64ex-nightly" ] || [ "$Branch" = "sm64exnightly" ]; then
			Branch=sm64ex_nightly
		fi
	fi
	if [ "$REPO" = "sm64nx" ]; then
		EXTERNAL_DATA=0
		Branch=master
	fi

	if [ "$2" = "--updatehd" ] || [ "$3" = "--updatehd" ] ||[ "$4" = "--updatehd" ] ||[ "$5" = "--updatehd" ]; then
		UpdateHD=1
	elif [ "$2" = "--hd" ] || [ "$3" = "--hd" ] ||[ "$4" = "--hd" ] ||[ "$5" = "--hd" ]; then
		UpdateHD=1
	fi
	if [ "$2" = "--sgi" ] || [ "$3" = "--sgi" ] ||[ "$4" = "--sgi" ] ||[ "$5" = "--sgi" ]; then
		SGI=1
	elif [ "$2" = "--SGI" ] || [ "$3" = "--SGI" ] ||[ "$4" = "--SGI" ] ||[ "$5" = "--SGI" ]; then
		SGI=1
	fi
	if [ "$2" = "--config" ] || [ "$3" = "--config" ] ||[ "$4" = "--config" ] ||[ "$5" = "--config" ]; then
		CONFIG=1
	elif [ "$2" = "config" ] || [ "$3" = "config" ] ||[ "$4" = "config" ] ||[ "$5" = "config" ]; then
		CONFIG=1
	fi
	if [ "$2" = "--depends" ] || [ "$3" = "--depends" ] ||[ "$4" = "--depends" ] ||[ "$5" = "--depends" ]; then
		DEPENDS=1
	fi
	}

doconfig(){
	if(whiptail --title "Build Options" --yesno "$(cat ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinuxcfg.txt)" 28 75 --yes-button "Edit Options" --no-button "Proceed" --defaultno); then
		whiptail --title "READ THIS NOW - IT WILL NOT REAPPEAR AUTOMATICALLY" --msgbox "The config file will open in a text editor.\n\nWhen you exit your editor, installation will continue.\n\nFor most people, default options which include community enhancements are reccommended.\n\nIf you mess up the config file, delete\n${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinuxcfg.txt \nand it will be recreated." 16 60
	editconfig	
	fi
	}

editconfig(){
	EDITORS=leafpad:epad:gedit:notepadqq:bluefish:geany:lime:kate:medit:nano:pico:micro:jed:emacs:vim:vi
	local url=${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinuxcfg.txt 
	local oldifs="$IFS"
	IFS=":"
	for editor in $EDITORS; do
       		IFS="$oldifs"
		if [ -z "$editor" ]; then
       			continue
       		fi
		if echo "$editor" | grep -q %s; then
       			shift $#
       			for arg in $browser; do
               			set -- "$@" "$(printf -- "$arg" "$url")"
       			done
       			"$@"
       		else
       			$editor "$url"
       		fi
		if [ $? -eq 0 ]; then
			return
       		fi
		done
	}

loademsdk(){
	if [ ! -d ~/emsdk ]; then
		cd
		git clone https://github.com/emscripten-core/emsdk.git
		cd emsdk
		./emsdk install latest
		./emsdk activate latest
	fi
	source ~/emsdk/emsdk_env.sh
	}

prepnx(){
	mkdir ~/"$REPO"/build
	mkdir ~/"$REPO"/build/"$VERSION"_"$TARGET"
	mkdir ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs
	ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/sm64.sav ~/"$REPO"/build/"$VERSION"_"$TARGET"/sm64.sav 
	ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/sm64.log ~/"$REPO"/build/"$VERSION"_"$TARGET"/sm64.log 
	ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/conf.bin ~/"$REPO"/build/"$VERSION"_"$TARGET"/conf.bin
 	ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/gamepad1.bindings.json ~/"$REPO"/build/"$VERSION"_"$TARGET"/gamepad1.bindings.json
	ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/keyboard1.bindings.json ~/"$REPO"/build/"$VERSION"_"$TARGET"/keyboard1.bindings.json
	ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 ~/"$REPO"/build/"$VERSION"_"$TARGET"/baserom."$VERSION".z64
	cd ~/"$REPO"/tools
	make "$JOBS"
	cd ~/"$REPO"/import
	echo Extracting Assets from ROM...
	python3 extract_assets.py
	python3 ../scripts/pak.py --source . --output ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/'!!base.pak'
	if [ ! -f ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/'!!base.pak' ]; then
		echo 
		echo Unable to extract and pak ROM.
		echo "smlinux exiting incomplete.  Contact #help-desk for support."
		xdg-open https://discord.gg/Ub6YHRm &disown
		exit
	fi
	}

dohd(){ 
	if [ "$REPO" = "sm64nx" ]; then 
		if [ ! -d ~/"$REPO"/build ] ; then mkdir ~/"$REPO"/build
		fi
		if [ ! -d ~/"$REPO"/build/"$VERSION"_"$TARGET" ] ; then mkdir ~/"$REPO"/build/"$VERSION"_"$TARGET"
		fi
		if [ ! -d ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs ] ; then mkdir ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs
		fi
		mkdir ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"Cleaner Aesthetics"
		cd ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"Cleaner Aesthetics"
		wget https://cdn.discordapp.com/attachments/730416836780490752/730430152957362191/cleaner.pak
		mkdir ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"HD Mario . Bowser"
		cd ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"HD Mario . Bowser"
		wget https://cdn.discordapp.com/attachments/730416836780490752/730425308989227158/arredondo.pak
		mkdir ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"~SGI Models"
		cd ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"~SGI Models"
		wget https://cdn.discordapp.com/attachments/730416836780490752/730645970693652591/sgi1.2.pak
		mkdir ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"~OWO Mod"
		cd ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"~OWO Mod"
		wget https://cdn.discordapp.com/attachments/730416836780490752/730420038024036362/owo.pak
		mkdir ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"~HD Luigi"
		cd ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"~HD Luigi"
		wget https://cdn.discordapp.com/attachments/730416836780490752/730425786452017222/luigi.pak
		mkdir ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"~NES Retro"
		cd ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs/"~NES Retro"
		wget https://cdn.discordapp.com/attachments/730416836780490752/730431589749620736/nes.pak
	else
		if [ "$EXTERNAL_DATA" = 1 ] ; then
			if [ ! -d ~/"$REPO"/build ] ; then 
				mkdir ~/"$REPO"/build
			fi
			if [ ! -d ~/"$REPO"/build/"$VERSION"_"$TARGET" ] ; then 
				mkdir ~/"$REPO"/build/"$VERSION"_"$TARGET"
			fi
			if [ -d ~/"$REPO"/build/"$VERSION"_"$TARGET"/res ] ; then
				mv ~/"$REPO"/build/"$VERSION"_"$TARGET"/res.old
				git clone --single-branch https://github.com/CrashCrod/Cleaner-Aesthetics.git ~/"$REPO"/build/"$VERSION"_"$TARGET"/res
				cd ~/"$REPO"/build/"$VERSION"_"$TARGET"/res	
				wget https://github.com/MapAnon/sm64-pc-hq-sounds/releases/download/5.1/hq_sounds_v5.1.zip
				cp -rpn ~/"$REPO"/build/"$VERSION"_"$TARGET"/res.old/ ~/"$REPO"/build/"$VERSION"_"$TARGET"/res
			else
				git clone --single-branch https://github.com/CrashCrod/Cleaner-Aesthetics.git ~/"$REPO"/build/"$VERSION"_"$TARGET"/res
				cd ~/"$REPO"/build/"$VERSION"_"$TARGET"/res	
				wget https://github.com/MapAnon/sm64-pc-hq-sounds/releases/download/5.1/hq_sounds_v5.1.zip
			fi
		fi
		if [ ! -f ~/"$REPO"/enhancements/hd_bowser.rar ] && [ ! "$SGI" = 1 ] && [ ! -f ~/"$REPO"/enhancements/1.4.1_keyhotfix.zip ]; then
			cd ~/"$REPO"/enhancements
			wget https://cdn.discordapp.com/attachments/716459185230970880/719758031990030427/Old_School_HD_Mario_Model.zip 
			wget https://cdn.discordapp.com/attachments/716459185230970880/718990046442684456/hd_bowser.rar	
			if [ "$REPO" = "sm64pc" ]; then
				wget https://cdn.discordapp.com/attachments/716459185230970880/718674249631662120/3d_coin_v2.patch
			elif [ "$REPO" = "sm64ex" ] || [ "$REPO" = "sm64-port" ]; then	
				wget https://cdn.discordapp.com/attachments/721806706547490868/725041183700680807/3d_coin_v2_nightly.patch
			fi
			cd ..	
			cp -Rn actors actors.bak
			unzip -o enhancements/Old_School_HD_Mario_Model 
			unrar x -o+ enhancements/hd_bowser
 			if [ "$REPO" = "sm64pc" ]; then
				git apply enhancements/3d_coin_v2.patch --ignore-whitespace
			elif [ "$REPO" = "sm64ex" ] || [ "$REPO" = "sm64-port" ]; then
				git apply enhancements/3d_coin_v2_nightly.patch --ignore-whitespace
			fi
		fi
		cd ~/"$REPO"
		if [ `arch` = "x86_64" ] && [ ! "$TARGET_WEB" = 1 ] && [ ! "$SGI" = 1 ] && [ ! "$ANDROID" = 1 ]; then	
			if [ -f ~/"$REPO"/enhancements/60fps_ex.patch ]; then
				git apply enhancements/60fps_ex.patch
				sed -i 's/vsync false/vsync true/g' ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/sm64config.txt
			elif [ -f ~/"$REPO"/enhancements/60fps.patch ]; then
				git apply enhancements/60fps.patch
				sed -i 's/vsync false/vsync true/g' ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/sm64config.txt
			fi
		fi
	fi
	}

dosgi(){
	if [ ! "$REPO" = "sm64ex" ] || [ ! "$Branch" = "nightly" ] || [ "$TARGET_WEB" = 1 ]; then
		if(whiptail --title "SGI Model Warning" --yesno "SGI Models are unlikely to succeed unless REPO=sm64ex Branch=nightly and TARGET_WEB=0." 10 50 --yes-button "Continue Anyway" --no-button "Cancel" --defaultno); then
			echo WARNING: sgi is unlikely to succeed on anything besides sm64ex-nightly for pc
			echo Proceeding anyway, but it is unlikely to build unless something has changed since this was written.
		else
			exit
		fi
	fi
# Removed!  Formerly it was 7zipped
	if [ 1 = 0 ] && [ ! -f /usr/bin/7z ]; then 
		echo "This comes as a 7z file but you don't have a tool to extract it."
		if [ -f /usr/bin/apt ]; then
			echo Please provide your password to install 7z...
			sudo apt install p7zip-full
		else
			echo This script checks for /usr/bin/7z.  The ubuntu package is called p7zip.
			echo Please install whatever package gets you 7z and run smlinux again.
			echo Also please let author know what package and distro so I can add it
			echo to depdencency list so others avoid this message.  
			exit
		fi
	fi
	cd ~/"$REPO"
	if [ -d ~/"$REPO"/actors.bak ]; then
		rm -rf actors
		cp -r actors.bak actors
	fi
	if [ -f ~/"$REPO"/enhancements/3d_coin_v2_nightly.patch ]; then
		git apply -R enhancements/3d_coin_v2_nightly.patch
		rm enhancements/3d_coin_v2_nightly.patch
		if [ -f ~/"$REPO"/enhancements/60fps_ex.patch ]; then
			git apply -R enhancements/60fps_ex.patch
		elif [ -f ~/"$REPO"/enhancements/60fps.patch ]; then
			git apply -R enhancements/60fps.patch
		fi
		sed -i 's/vsync true/vsync false/g' ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/sm64config.txt
	fi
	if [ "$REPO" = "sm64ex" ] && [ -f ~/"$REPO"/enhancements/CHEATERv2.patch ]; then
		git apply -R enhancements/CHEATERv2.patch
		rm enhancements/CHEATERv2.patch
	fi
	cd enhancements
	wget https://cdn.discordapp.com/attachments/730551213376143431/742471533951189143/1.4.1_keyhotfix.zip
	cd ..
	unzip -o enhancements/1.4.1_keyhotfix.zip
	TEXTSAVES=1
	}
	
scriptUpdate(){
if [ ! -f ~/.smlinuxUpdate ]; then 
	if [ ! -f "${MAPFILE[0]}"/smlinux ]; then
		echo Installing Script... 		
		if [ -d ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc ]; then
			if [ -d ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc.baq ]; then
				rm -rf ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc.baq
			fi
			mv -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc.baq
		fi
		git clone --single-branch https://github.com/enigma9o7/smlinux.git ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc
		if [ -d ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc.baq ]; then
			cp -Rn ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc.baq/* ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/
			rm -rf ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc.baq
		fi
		touch ~/.smlinuxUpdate
		mv ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinux "${MAPFILE[0]}"/
		if [ ! -f "${MAPFILE[0]}"/smlinux ]; then
			echo WARNING: Could not write to first path directory.  Creating ~/bin.
			touch ~/.smlinuxNopath
			mkdir ~/bin
			export PATH=~/bin:$PATH
			mapfile -t -d: <<<"$PATH"
			mv -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinux "${MAPFILE[0]}"/
			if [ ! -f "${MAPFILE[0]}"/smlinux ]; then
				echo ERROR - Could not add to path.  Run without AutoUpdate enabled.
				exit
			fi
		fi
		chmod +x "${MAPFILE[0]}"/smlinux
		cd "$LAUNCH_DIR"
		exec smlinux "$@"
	else
		cd ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc
		git fetch
		if [ "$(git diff HEAD origin/HEAD -- smlinux)" != "" ]; then
			git merge
			if [ ! -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinux ]; then
				echo "ERROR: Script Update Unsuccesful."
				echo "Try #help-desk if script udpates continue to fail"
			else
				echo 'mapfile -t -d: <<<"$PATH"
				mv -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinux "${MAPFILE[0]}"/
				if [ ! -f "${MAPFILE[0]}"/smlinux ]; then
					echo WARNING: Could not write to first path directory.  Creating ~/bin.
					touch ~/.smlinuxNopath
					mkdir ~/bin
					export PATH=~/bin:$PATH
					mapfile -t -d: <<<"$PATH"
					mv -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinux "${MAPFILE[0]}"/
					if [ ! -f "${MAPFILE[0]}"/smlinux ]; then
						echo ERROR - Could not add to path.  Run without AutoUpdate enabled.
						exit
					fi
				fi
				chmod +x "${MAPFILE[0]}"/smlinux
				if [ -f ~/Downloads/smlinux ]; then mv -f ~/Downloads/smlinux ~/Downloads/smlinux.old.backup
				fi
				if [ -f ~/Downloads/smlinux.sh ]; then mv -f ~/Downloads/smlinux.sh ~/Downloads/smlinux.old.backup
				fi
				if [ -f ~/Downloads/smlinux.txt ]; then mv -f ~/Downloads/smlinux.sh ~/Downloads/smlinux.old.backup
				fi	
				exec smlinux "$@"' > ~/.smlinuxUpdate
				chmod +x ~/.smlinuxUpdate
				cd "$LAUNCH_DIR"
				exec ~/.smlinuxUpdate "$@"
			fi
		else    
			echo Already up to date.
		fi
	fi
fi
}

makedesktop(){
if [ ! -f ${XDG_DATA_HOME:-$HOME/.local/share}/icons/"$REPO".* ]; then
	echo Getting Icon...
	if [ "$REPO" = "sm64ex" ]; then
		wget https://cdn.discordapp.com/attachments/711253314855108629/712146686834638890/sm64.png
		mv sm64.png ${XDG_DATA_HOME:-$HOME/.local/share}/icons/"$REPO".png
	elif [ "$REPO" = "sm64nx" ]; then 
		wget https://cdn.discordapp.com/attachments/711253314855108629/719215654837682226/Super_Mario_64.png
		mv Super_Mario_64.png ${XDG_DATA_HOME:-$HOME/.local/share}/icons/"$REPO".png
	elif [ -f ~/"$REPO"/textures/segment2/segment2.05A00.rgba16.png ]; then
		cp ~/"$REPO"/textures/segment2/segment2.05A00.rgba16.png ${XDG_DATA_HOME:-$HOME/.local/share}/icons/"$REPO".png
		echo 16x16 image from ROM used.  Reccommend replacing ${XDG_DATA_HOME:-$HOME/.local/share}/icons/"$REPO".png
	fi	
else
	echo Icon already exists...
fi
if [ ! -f ${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop ]; then
	echo '[Desktop Entry]
Encoding=UTF-8
Type=Application
StartupNotify=false
Categories=Game;'>${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop
echo Icon=${XDG_DATA_HOME:-$HOME/.local/share}/icons/"$REPO".png >>${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop
echo Name=Super Mario 64 \("$REPO"\) >>${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop
	if [ "$REPO" = "sm64pc" ] || [ "$REPO" = "sm64ex" ]; then
		echo Path=~/"$REPO"/build/"$VERSION"_"$TARGET" >>${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop
		echo Exec=~/"$REPO"/build/"$VERSION"_"$TARGET"/sm64."$VERSION".f3dex2e --cheats>>${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop
	elif [ "$REPO" = "sm64-port" ]; then
		echo Path=${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO" >>${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop
		printf "Exec=sh -c \"" >>${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop
		echo ~/"$REPO"/build/"$VERSION"_"$TARGET"/sm64."$VERSION".f3dex2e';echo'\" >>${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop
	else
		echo Path=~/"$REPO"/build/"$VERSION"_"$TARGET" >>${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop
		echo Exec=~/"$REPO"/build/"$VERSION"_"$TARGET"/sm64."$VERSION".f3dex2e>>${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop
	fi
cp ${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop ${XDG_DESKTOP_DIR:-$HOME/Desktop}
else
	echo Menu entry desktop file already exists...
fi
}

rungame(){
	if [ "$TARGET_WEB"  = 1 ]; then 
		cd ~/"$REPO"/build/"$VERSION"_"$TARGET"
		ln -s sm64.us.f3dex2e.html index.html
		python3 -m http.server 8100 &
		if [ -f /usr/bin/firefox ]; then
			firefox --new-window http://localhost:8100&disown
		else
			xdg-open http://localhost:8100&disown
		fi
	elif [ "$ANDROID"  = 1 ] ; then
		if [ "$GOTPHONE" = 1 ]; then
			adb shell am start -n com.vdavid003.sm64port/.sm64portActivity
		fi
		xdg-open ~/"$REPO"/../../build/outputs/apk/debug &disown
	else 
		gtk-launch "$REPO"&disown
	fi
}

####################################### The Beginning ########################################

#Make sure folders and installer config file exist, if not create them.

LAUNCH_DIR=$(pwd)
mapfile -t -d: <<<"$PATH"
if [ ! -d $HOME/.local ]; then mkdir $HOME/.local
fi
if [ ! -d ${XDG_DATA_HOME:-$HOME/.local/share} ]; then mkdir ${XDG_DATA_HOME:-$HOME/.local/share}
fi
if [ ! -d ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc ]; then mkdir ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc
fi
if [ ! -d ${XDG_DATA_HOME:-$HOME/.local/share}/icons ]; then mkdir ${XDG_DATA_HOME:-$HOME/.local/share}/icons
fi
if [ ! -d ${XDG_DATA_HOME:-$HOME/.local/share}/applications ]; then mkdir ${XDG_DATA_HOME:-$HOME/.local/share}/applications
fi
if [ ! -f ~/.smlinuxUpdate ]; then
	#Play a sound clip for no reason - thank you for playing my game.
	if [ -f /usr/bin/mplayer ]; then
		if [ -f ~/sm64pc/sound/samples/sfx_mario_peach/0D.aiff ]; then
			sh -c 'mplayer -nolirc -really-quiet ~/sm64pc/sound/samples/sfx_mario_peach/0D.aiff&'
		elif [ -f ~/sm64ex/sound/samples/sfx_mario_peach/0D.aiff ]; then
			sh -c 'mplayer -nolirc -really-quiet ~/sm64ex/sound/samples/sfx_mario_peach/0D.aiff&'
		elif [ -f ~/sm64-port/sound/samples/sfx_mario_peach/0D.aiff ]; then
			sh -c 'mplayer -nolirc -really-quiet ~/sm64-port/sound/samples/sfx_mario_peach/0D.aiff&'
		fi
	fi
	echo Loading configuration from ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinuxcfg.txt...
	if [ ! -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/smlinuxcfg.txt ]; then
		echo File not found, so making a new one...
		makeconfig
		CONFIG=1
	fi
	if [ "$1" = "config" ]; then
		editconfig
		echo
		exit
	fi
	loadconfig "$@"
	if [ "$CONFIG" = 1 ]; then
		doconfig
		loadconfig "$@"
	fi
	if [ ! -d ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO" ] && [ ! "$ANDROID" = 1 ]; then
		echo Creating ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO" folder for game save and configuration.
		mkdir ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"
	fi
	echo Verifying ROM...
	if [ -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 ]; then
		if [ ! -f ~/"$REPO"/baserom."$VERSION".z64 ]  && [ -d ~/"$REPO" ]; then
			ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 ~/"$REPO"/baserom."$VERSION".z64
		fi
		echo ROM Available.
	else
		cd "$LAUNCH_DIR"
		if [ -f "$1" ]; then 
			cp "$1" ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64
			vettrom
		fi
		if [ ! -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 ]; then
			if [ -f ~/sm64pc/baserom."$VERSION".z64 ]; then
				cp ~/sm64pc/baserom."$VERSION".z64 ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc
				vettrom
			fi
			if [ -f ~/sm64ex/baserom."$VERSION".z64 ] && [ ! -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 ]; then
				cp ~/sm64ex/baserom."$VERSION".z64 ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc
				vettrom
			fi
			if [ -f ~/sm64-port/baserom."$VERSION".z64 ] && [ ! -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 ]; then
				cp ~/sm64-port/baserom."$VERSION".z64 ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc
			vettrom
			fi
		fi
		if [ -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 ]; then
			echo ROM Found and Verified.
		elif [ -f "$1" ]; then
			xdg-open https://hack64.net/tools/swapper.php &disown
			sleep 1
			zenity --error --text='ERROR: Your ROM is not valid.\n\nAn original Super Mario 64 ROM in z64 (big endian) format is required to build.\nIf your rom is backed up in v64 or n64 format, try this online converter then run smlinux again.' --title="Your installation is incomplete." --width=640 &disown	
			sleep 1			
			echo
			echo "ERROR: Your ROM is not valid.  Not even considering transient parents!"
			echo "Original Super Mario 64 ROM image in z64 big endian format is required to build."
			echo If ROM is in v64/n64 format, try this online converter then run smlinux again.
		elif [ "$1" = "update" ] || [ "$1" = "build" ]; then
			echo ERROR: ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 not found.
			echo
			echo smlinux exiting incomplete.
			echo
			exit
		else	
			echo WARNING: No ROM file found.  Please specify a romfile when you are ready to build.
		fi
	fi
else
	loadconfig "$@"
fi

if [ "$1" = "-u" ] || [ "$1" = "--update" ] || [ "$1" = "update" ] || [ "$1" = "up" ]; then
	echo
	if [ -f ~/.smlinuxUpdate ]; then 
		rm ~/.smlinuxUpdate
		echo Script Update Complete.	
	elif [ "$AutoUpdate" = 1 ]; then
		echo [1] Checking smlinux github repository for updates...
		scriptUpdate "$@"
	else
		echo "WARNING: AutoUpdate Disabled in Config File!"
		echo [1] Skipping check for smlinux updates...
	fi
	if [ ! -d ~/"$REPO" ]; then
		echo ERROR: No ~/"$REPO" folder to update!
		echo Specify smlinux build for a fresh build.
		exit
	fi
	echo
	echo [2] Checking "$REPO" github repository for updates...
	if [ "$REPO" = "sm64-port-android-base/app/jni/src" ]; then
		cd $HOME/"$REPO"/../../..
	else
		cd $HOME/"$REPO"
	fi
	echo
	git fetch
	git checkout "$Branch"
	if [ "$(git diff HEAD origin/HEAD)" != "" ]; then
		 git merge
	fi
	if [ "$?" = "1" ]; then
		cd ~/"$REPO"
		if [ -f ~/"$REPO"/enhancements/3d_coin_v2_nightly.patch ]; then
			git apply -R enhancements/3d_coin_v2_nightly.patch
			if [ -f ~/"$REPO"/enhancements/60fps_ex.patch ]; then
				git apply -R enhancements/60fps_ex.patch
			elif [ -f ~/"$REPO"/enhancements/60fps.patch ]; then
				git apply -R enhancements/60fps.patch
			fi
		fi
		git merge
		if [ "$?" = "1" ]; then
			echo WARNING: Unable to merge source updates from github.
		elif [ -f ~/"$REPO"/enhancements/3d_coin_v2_nightly.patch ]; then
			git apply enhancements/3d_coin_v2_nightly.patch
			if [ -f ~/"$REPO"/enhancements/60fps_ex.patch ] && [ `arch` = "x86_64" ]; then
				git apply enhancements/60fps_ex.patch
			elif [ -f ~/"$REPO"/enhancements/60fps.patch ] && [ `arch` = "x86_64" ]; then
				git apply enhancements/60fps.patch
			fi
		fi
	fi
	if [ "$REPO" = "sm64-port-android-base/app/jni/src" ]; then
		git submodule init
		git submodule update	
		if [ -d ~/"$REPO"/../../build ]; then
			rm -rf ~/"$REPO"/../../build
			rm -rf ~/"$REPO"/../../.externalNativeBuild
		fi
	fi
	if [ -d ~/"$REPO"/build/"$VERSION"_"$TARGET" ]; then
		if [ -d ~/"$REPO"/build/"$VERSION"_"$TARGET".old ]; then
			rm -rf ~/"$REPO"/build/"$VERSION"_"$TARGET".old
		fi
		mv ~/"$REPO"/build/"$VERSION"_"$TARGET" ~/"$REPO"/build/"$VERSION"_"$TARGET".old
	fi
	echo
	echo [3] Applying pre-build modifications...
	if [ "$UpdateHD" = 1 ]; then
		printf "\nAdding Community Upscale Enhancements...\n\n"
		dohd
	fi
	if [ "$SGI" = 1 ]; then
		printf "\nAdding SGI Models...\n\n"
		dosgi
	fi
	if [ "$REPO" = "sm64ex" ] && [ "$Branch" = "nightly" ] && [ ! -f ~/"$REPO"/enhancements/CHEATERv2.patch ]; then
		cd ~/"$REPO"
		unzip -j ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/CHEATERv2 CHEATERv2/CHEATERv2.patch -d enhancements
		git apply enhancements/CHEATERv2.patch
	fi
	if [ "$InstallHD" = 1 ] && [ "TARGET_WEB" = 1 ] && [ -d ~/"$REPO"/build/"$VERSION"_pc ]; then
		if [ -f ~/"$REPO"/enhancements/60fps_ex.patch ]; then
			git apply -R enhancements/60fps_ex.patch
		elif [ -f ~/"$REPO"/enhancements/60fps.patch ]; then
			git apply -R enhancements/60fps.patch
		fi
	fi
	echo		
	echo [4] Compiling...
	domake
	if [ "$InstallHD" = 1 ] && [ "TARGET_WEB" = 1 ] && [ -d ~/"$REPO"/build/"$VERSION"_pc ] && [ `arch` = "x86_64" ]; then
		if [ -f ~/"$REPO"/enhancements/60fps_ex.patch ]; then
			git apply enhancements/60fps_ex.patch
		elif [ -f ~/"$REPO"/enhancements/60fps.patch ]; then
			git apply enhancements/60fps.patch
		fi
	fi
	echo
	if [ ! -f ~/"$REPO"/build/"$VERSION"_"$TARGET"/sm64."$VERSION".f3dex2* ]; then
		echo "ERROR: Build Failure - output file not found."  
		if [ -d ~/"$REPO"/build/"$VERSION"_"$TARGET".old ]; then
			echo "Restoring previous build..."
			if [ -d ~/"$REPO"/build/"$VERSION"_"$TARGET" ]; then 
				rm -rf ~/"$REPO"/build/"$VERSION"_"$TARGET" 
			fi
			mv ~/"$REPO"/build/"$VERSION"_"$TARGET".old ~/"$REPO"/build/"$VERSION"_"$TARGET"
		fi
		echo "smlinux exiting incomplete.  Contact #help-desk for support."
		xdg-open https://discord.gg/Ub6YHRm &disown
		exit
	fi
	if [ -d ~/"$REPO"/build/"$VERSION"_"$TARGET".old/res ]; then
		echo [5] Restoring External Resources...
		cp -rpn ~/"$REPO"/build/"$VERSION"_"$TARGET".old/res/. ~/"$REPO"/build/"$VERSION"_"$TARGET"/res
	fi
	if [ -d ~/"$REPO"/build/"$VERSION"_"$TARGET"/res/.git ] ; then
		echo Checking for Cleaner Aesthetics Texture updates on Github...
		cd ~/"$REPO"/build/"$VERSION"_"$TARGET"/res
		git pull
	fi
	if [ -d ~/"$REPO"/build/"$VERSION"_"$TARGET".old/romfs ]; then
		echo "[5] Restoring Savefile, ROM and ROM Filesystem (paks)"
		cp -rpn ~/"$REPO"/build/"$VERSION"_"$TARGET".old/romfs/. ~/"$REPO"/build/"$VERSION"_"$TARGET"/romfs
		ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/sm64.sav ~/"$REPO"/build/"$VERSION"_"$TARGET"/sm64.sav 
		ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/sm64.log ~/"$REPO"/build/"$VERSION"_"$TARGET"/sm64.log 
		ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/conf.bin ~/"$REPO"/build/"$VERSION"_"$TARGET"/conf.bin
	 	ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/gamepad1.bindings.json ~/"$REPO"/build/"$VERSION"_"$TARGET"/gamepad1.bindings.json
		ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/"$REPO"/keyboard1.bindings.json ~/"$REPO"/build/"$VERSION"_"$TARGET"/keyboard1.bindings.json
		ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 ~/"$REPO"/build/"$VERSION"_"$TARGET"/baserom."$VERSION".z64
	elif [ "$REPO" = "sm64nx" ]; then
		echo "[5] Preparing Savefile, ROM and ROM Filesystem (paks)"
		prepnx
		if [ "$InstallHD" = 1 ]; then
			dohd
		fi		
	fi
	echo
	if [ -f ${XDG_DATA_HOME:-$HOME/.local/share}/applications/"$REPO".desktop ] || [ "$TARGET" = "web" ]; then
		echo [6] Update Complete.  Testing Application...
	elif [ "$ANDROID" = 1 ] && [ ! -f ~/"$REPO"/../../build/outputs/apk/debug/app-debug.apk ]; then
		echo
		echo ERROR: Build Failure.  APK file not found.
		echo "smlinux exiting incomplete.  Contact #help-desk for support."
		xdg-open https://discord.gg/Ub6YHRm &disown
		exit
	elif [ ! "$ANDROID" = 1 ] ; then
		echo [6] Creating Menu Entry and Desktop Shortcut....
		makedesktop
		echo
		echo [7] Update Complete.  Testing Application...
	else
		mv ~/"$REPO"/../../build/outputs/apk/debug/app-debug.apk ~/"$REPO"/../../build/outputs/apk/debug/sm64."$VERSION".f3dex2e.apk
		echo [6] Update Complete. 
	fi
	rungame
	sleep 10
	echo
	echo smlinux is complete.  You may exit or close this terminal window.
	if [ "$TARGET" = "web" ]; then
		echo Python Webserver will remain running until it is closed.
	fi
	echo
	exit
fi

if [ "$1" = "--purge" ] || [ "$1" = "purge" ]; then
	
	echo Wiping...
	rm -rf ~/sm64pc
	rm -rf ~/sm64ex
	rm -rf ~/sm64-port
	rm -rf ~/sm64nx
	rm -rf ~/sm64pc.old
	rm -rf ~/sm64ex.old
	rm -rf ~/sm64-port.old
	rm -rf ~/sm64nx.old
	rm -rf ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc
	rm -rf ${XDG_DATA_HOME:-$HOME/.local/share}/sm64ex	
	rm -rf ${XDG_DATA_HOME:-$HOME/.local/share}/sm64-port
	rm -rf ${XDG_DATA_HOME:-$HOME/.local/share}/sm64nx
	rm ${XDG_DATA_HOME:-$HOME/.local/share}/icons/sm64*
	rm ${XDG_DATA_HOME:-$HOME/.local/share}/applications/sm64*
	rm ${XDG_DESKTOP_DIR:-$HOME/Desktop}/sm64*
	rm ~/Downloads/smlinux.*
	echo Note this did not remove any packages installed as build tools or dependencies.
	echo Remove those with your package manager.  Devel libraries can always safely be removed.
	echo And of course you must delete smlinux itself from "${MAPFILE[0]}"
        exit
fi

if [ -f "$1" ] || [ -f "$LAUNCH_DIR"/"$1" ] || ( [ -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 ] && [ "$1" = "build" ] ); then
	echo
	if [ -f ~/.smlinuxUpdate ]; then 
		rm ~/.smlinuxUpdate
		echo Script Update Complete.
	else	# Fresh Build
		if [ ! -d ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/.git ] || [ "$DEPENDS" = 1 ]; then
			echo "[1] Installing required build tools..."
			$Linux
			if [ "$REPO" = "sm64nx" ] ; then
				pip3 install pillow zstandard tqdm xxhash
				gcccheck
			fi
			if [ "$ANDROID" = 1 ]; then
				androidsdk
			fi
						
		elif [ "$REPO" = "sm64nx" ] && [ ! -d ~/"$REPO" ]; then
			echo "[1] Installing required build tools for nx..."
			pip3 install pillow zstandard tqdm xxhash
			gcccheck
		elif [ "$ANDROID" = 1 ] && [ ! -f ~/android-sdk/tools/bin/sdkmanager ]; then
			echo "[1] Installing required build tools for Android..."
			androidsdk
		else
			echo "[1] This is not first install, skipping dependencies..."
		fi
		echo
		echo [2] Checking for Script Updates from Github...
		if [ "$AutoUpdate" = 1 ]; then
			scriptUpdate "$@"
		else
			echo "WARNING: AutoUpdate Disabled in Config File! You might be using an old version!"
		fi
	fi
else
	echo "/-----------------------------------------------------------------------------\\"
	echo "|                                                                             |"
	echo "|      Super Mario 64 Install * Build * Update Script for Linux               |"
	echo "|                                                                             |"
	echo "| Installation & First Build: chmod +x smlinux                                |"
	echo "|                             ./smlinux <romfile> <options>                   |"
	echo "|  for example:                                                               |"
	echo "|   ./smlinux ~/roms/n64/sm64.z64  or  ./smlinux \"Super Mario 64 (U) [!].z64\" |"
	echo "|                                                                             |"
	echo "| Normal Usage: smlinux <command> <options>                                   |"
	echo "|                                                                             |"
	echo "| Commands:                                                                   |"
	echo "|  update: Updates source & rebuilds, preserving mods and external resources  |"
	echo "|  build:  Gets new source from github and builds. (Renames existing folder)  |"
	echo "|  config: Opens smlinuxcfg.txt in text editor without building               |"
	echo "|  purge:  Removes all files created by this script, including sm64           |"
	echo "|                                                                             |"
	echo "| Options: --config   prompt to edit config file before build                 |"
	echo "|          --depends  reinstall dependencies                                  |"
	echo "|          --updatehd (re)aquire & apply community upscale enhancements       |"
	echo "|          --sgi      aquire and apply Render96 SGI model pack                |"
	echo "|                                                                             |"
	echo "-------------------------------------------------------------------------------"
	if [ "$1" = "--help" ] || [ "$1" = "-help" ] || [ "$1" = "help" ] || [ "$1" = "-h" ]; then
		exit
	elif [ -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 ]; then
		echo "ERROR: You must specify update, build, config or purge."
	else 
		echo "ERROR: Must provide valid path/filename to Z64 formatted romfile."	
	fi
	exit
fi

echo
echo [3] Downloading "$REPO" source from github... 
if [ -d ~/"$REPO"/build/"$VERSION"_"$TARGET" ]; then
	if [ "$REPO" = "sm64-port-android-base/app/jni/src" ]; then
		echo WARNING: sm64-port-android-base directory already exists! 
		echo Renaming to sm64-port-android-base.old...
		if [ -d ~/sm64-port-android-base.old ]; then
			rm -rf ~/sm64-port-android-base.old
		fi
		mv ~/sm64-port-android-base ~/sm64-port-android-base.old
	else
		echo WARNING: "$REPO" directory already exists!  Renaming to "$REPO".old...
		if [ -d ~/"$REPO".old ]; then
			rm -rf ~/"$REPO".old
		fi
		mv ~/"$REPO" ~/"$REPO".old
	fi
fi
if [ ! -d ~/"$REPO" ]; then
	cd
	if [ "$REPO" = "sm64nx" ]; then
		git clone https://github.com/teamsalta/"$REPO" -b "$Branch"
	elif [ "$REPO" = "sm64ex" ]; then
		git clone https://github.com/sm64pc/"$REPO" -b "$Branch"
	elif [ "$REPO" = "sm64-port-android-base/app/jni/src" ]; then
		git clone https://github.com/vdavid003/sm64-port-android-base -b "$Branch"
		cd sm64-port-android-base
		git submodule init
		git submodule update
		./getSDL.sh
	else
		git clone https://github.com/"$REPO"/"$REPO" -b "$Branch"
	fi
fi
if [ ! -d ~/"$REPO" ]; then
	echo "ERROR: Could not reach github."
	echo "Script Ending Incomplete.  Contact #help-desk for support."
	xdg-open https://discord.gg/Ub6YHRm &disown
	exit
fi
ln -s ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/baserom."$VERSION".z64 ~/"$REPO"/baserom."$VERSION".z64

echo
echo [4] Extracting Assets from ROM...
echo
if [ "$REPO" = "sm64nx" ]; then
	prepnx
else 	
	cd ~/"$REPO"
	./extract_assets.py "$VERSION"
fi

echo
echo [5] Applying Community Enhancements...
echo
if [ "$SGI" = 1 ]; then
	dosgi
fi
if [ "$InstallHD" = 1 ]; then 
	dohd
else
	echo "WARNING: InstallHD Disabled in Config File."
fi
if [ "$REPO" = "sm64ex" ] && [ "$Branch" = "nightly" ] && [ -f ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/CHEATERv2.zip ]; then
	cd ~/"$REPO"
	unzip -j ${XDG_DATA_HOME:-$HOME/.local/share}/sm64pc/CHEATERv2 CHEATERv2/CHEATERv2.patch -d enhancements
	git apply enhancements/CHEATERv2.patch
fi

echo
echo [6] Compiling...
domake
if [ ! -f ~/"$REPO"/build/"$VERSION"_"$TARGET"/sm64."$VERSION".f3dex2* ]; then
	echo
	echo ERROR: Build Failure.  Expected binary file not found.
	echo "smlinux exiting incomplete.  Contact #help-desk for support."
	xdg-open https://discord.gg/Ub6YHRm &disown
	exit
fi
if [ "$ANDROID" = 1 ] && [ ! -f ~/"$REPO"/../../build/outputs/apk/debug/app-debug.apk ]; then
	echo
	echo ERROR: Build Failure.  Expected apk file not found.
	echo "smlinux exiting incomplete.  Contact #help-desk for support."
	xdg-open https://discord.gg/Ub6YHRm &disown
	exit
elif [ -f ~/"$REPO"/../../build/outputs/apk/debug/app-debug.apk ]; then
	mv ~/"$REPO"/../../build/outputs/apk/debug/app-debug.apk ~/"$REPO"/../../build/outputs/apk/debug/sm64."$VERSION".f3dex2e.apk
fi
echo
echo [7] Echo Creating Desktop Shortcut and Menu Entry...
if [ "$TARGET_WEB" = 1 ] || [ "$ANDROID" = 1 ]; then
	Skipping for non pc version...
else
	makedesktop
fi

echo
echo [8] Build Succesful!  Testing Application Launch...
rungame
if [ -f ~/.smlinuxNopath ]; then
	rm ~/.smlinuxNopath
	zenity --info --text='You did not have a home folder in your path so ~/bin was created.\n\nReboot or type \n\n    PATH=~/bin:$PATH\n\nbefore running smlinux again.' --title="Your installation is complete." --width=450	
	printf '\nYou did not have a home folder in your path so ~/bin was created.\n\nReboot or type \n\n      PATH=~/bin:$PATH\n\nbefore running smlinux again.\n\n'
else	
	sleep 10
fi
echo
echo smlinux is complete.  You may exit or close this terminal window.
if [ "$TARGET_WEB" = 1 ]; then
	echo Python Webserver will remain running until it is closed.
fi
echo